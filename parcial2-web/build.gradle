plugins {
    id 'java'
    id 'application'
    id 'com.github.johnrengelman.shadow' version '5.2.0'
    id 'idea' //plugins para la integración con el IDEA.
    id 'com.google.protobuf' version '0.8.17'

}

group 'eitc.pucmm'
version '1.0-SNAPSHOT'

mainClassName = "eitc.pucmm.Main"


repositories {
    mavenCentral()
}

dependencies {

    //Libreria test
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'

    //Javalin Framework
    implementation 'io.javalin:javalin:5.6.1'
    implementation "org.slf4j:slf4j-simple:2.0.3"

    //Procesamiento JSON.
    implementation 'com.fasterxml.jackson.core:jackson-core:2.15.2'

    //libreria jsoup.
    implementation group: 'org.jsoup', name: 'jsoup', version: '1.15.3'

    // En la versión 5.3.X separaron las clases del renderizado en otro proyecto
    implementation "io.javalin:javalin-rendering:5.6.0"

    //ORM - Hibernate.
    implementation 'org.hibernate.orm:hibernate-core:6.0.2.Final'

    //sistemas de plantilla:
    implementation 'org.thymeleaf:thymeleaf:3.1.1.RELEASE'

    //libreria para SOAP de Jetty https://mvnrepository.com/artifact/org.eclipse.jetty/jetty-http-spi
    implementation group: 'org.eclipse.jetty', name: 'jetty-http-spi', version: '11.0.13'

    //incluyendo las librerias de javax.ee en java 11.
    //https://www.baeldung.com/java-soap-web-service
    implementation "jakarta.servlet:jakarta.servlet-api:4.0.3"
    implementation "jakarta.activation:jakarta.activation-api:1.2.2"
    implementation "jakarta.xml.ws:jakarta.xml.ws-api:4.0.0"
    implementation "jakarta.xml.soap:jakarta.xml.soap-api:3.0.0"
    implementation "com.sun.xml.messaging.saaj:saaj-impl:2.0.1"
    implementation "com.sun.xml.ws:jaxws-rt:3.0.2"

    //gRPC
    implementation 'io.grpc:grpc-netty-shaded:1.39.0'
    implementation 'io.grpc:grpc-protobuf:1.39.0'
    implementation 'io.grpc:grpc-stub:1.39.0'
    compileOnly 'org.apache.tomcat:annotations-api:6.0.53' // necessary for Java 9+
    implementation 'com.google.protobuf:protobuf-java:3.17.3'

    //JWT
    implementation 'io.jsonwebtoken:jjwt-api:0.10.5'
    implementation 'io.jsonwebtoken:jjwt-impl:0.10.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.10.5'

    //Rest Client
    implementation 'com.konghq:unirest-java:3.11.09'

    // https://mvnrepository.com/artifact/javax.xml.ws/jaxws-api
    implementation 'javax.xml.ws:jaxws-api:2.3.1'

    //H2 Database
    implementation 'com.h2database:h2:2.1.214'

}
shadowJar {
    archivesBaseName = 'app'
    archiveClassifier = ''
    archiveVersion = ''
}

task stage {
    dependsOn shadowJar
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:3.17.2"
    }
    plugins {
        grpc {
            artifact = 'io.grpc:protoc-gen-grpc-java:1.39.0'
        }
    }
    generateProtoTasks {
        all()*.plugins {
            grpc {}
        }
    }

    generatedFilesBaseDir = "$projectDir/generated"
}
clean {
    delete protobuf.generatedFilesBaseDir
}
idea {
    module {
        sourceDirs += file("src/generated")
    }
}



